{
  // Settings
  "passfail": false, // Stop on first error.
  "maxerr": 100, // Maximum error before stopping.


  // Predefined globals whom JSHint will ignore.
  "browser": true, // Standard browser globals e.g. `window`, `document`.
  "node": true,


  // Development.
  "debug": false, // Allow debugger statements e.g. browser breakpoints.
  "devel": true, // Allow developments statements e.g. `console.log();`.


  // ECMAScript next
  "strict": false, // Require `use strict` pragma in every file.
  "globalstrict": false, // Allow global "use strict" (also enables 'strict').
  "esnext": true, // ES6 syntax
  "futurehostile": true, // Warn about use of future language keywords.
  "predef": [ "-Promise", "Promise" ], // Allow me to redefine native Promise


  // The Good Parts.
  "asi": true, // Tolerate Automatic Semicolon Insertion (no semicolons).
  "laxbreak": true, // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
  "bitwise": true, // Prohibit bitwise operators (&, |, ^, etc.).
  "boss": false, // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
  "eqeqeq": true, // Require triple equals i.e. `===`.
  "eqnull": false, // Tolerate use of `== null`.
  "evil": false, // Tolerate use of `eval`.
  "expr": false, // Tolerate `ExpressionStatement` as Programs.
  "forin": false, // Tolerate `for in` loops without `hasOwnPrototype`.
  "immed": true, // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
  "latedef": true, // Prohipit variable use before definition.
  "loopfunc": false, // Allow functions to be defined within loops.
  "noarg": true, // Prohibit use of `arguments.caller` and `arguments.callee`.
  "regexp": true, // Prohibit `.` and `[^...]` in regular expressions.
  "regexdash": false, // Tolerate unescaped last dash i.e. `[-...]`.
  "scripturl": true, // Tolerate script-targeted URLs.
  "shadow": false, // Allows re-define variables later in code e.g. `var x=1; x=2;`.
  "supernew": false, // Tolerate `new function () { ... };` and `new Object;`.
  "undef": true, // Require all non-global variables be declared before they are used.


  // Personal styling preferences.
  "freeze": true, // Prohibit redefinition of native prototypes.
  "nonew": true, // Prohibit use of constructors for side-effects.
  "plusplus": false // Prohibit use of `++` & `--`.
}
